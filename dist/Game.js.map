{"version":3,"sources":["Game.js"],"names":["ansi","require","cursor","process","stdout","posx","posy","_GameCommands","Map","GameState","PLAY","_GameRules","set","exit","Game","Board","Renderer","Cells","CommandReader","_Board","_Renderer","_Cells","_CommandReader","toggleIsAlive","play","console","log","length","toggleIsSelected","setInitActiveCell","init","setGameCommands","action","get","getCellNeighboursCount","printBoard","getKeyboardInput","executeAction","positionX","positionY","counter","leftOrigin","rightOrigin","upOrigin","downOrigin","i","isAlive","leftUpCounter","count","getDiagonalLeftDown","leftDownCounter","rightUpCounter","getDiagonalRightUp","rightDownCounter","getDiagonalRightDown","module","exports"],"mappings":"AAAA;;;;;;AACA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AAAA,IACIC,SAASF,KAAKG,QAAQC,MAAb,CADb;AAEE,IAAIC,OAAO,CAAX;AAAA,IAAcC,OAAO,CAArB;;AAEF,IAAMC,gBAAgB,IAAIC,GAAJ,EAAtB;;AAEA,IAAIC,YAAY,EAACC,MAAM,KAAP,EAAhB;;AAEA,IAAMC,aAAa,IAAIH,GAAJ,EAAnB;AACAG,WAAWC,GAAX,CAAe,gBAAf,EAAiC,YAAM;AACtCT,SAAQU,IAAR;AACA,CAFD;;IAIMC;AACL,eAAYC,KAAZ,EAAmBC,QAAnB,EAA6BC,KAA7B,EAAoCC,aAApC,EAAmD;AAAA;;AAClD,OAAKC,MAAL,GAAcJ,KAAd;AACA,OAAKK,SAAL,GAAiBJ,QAAjB;AACA,OAAKK,MAAL,GAAcJ,KAAd;AACA,OAAKK,cAAL,GAAsBJ,aAAtB;AACA;;;;oCACiB;AAAA;;AACjBX,iBAAcK,GAAd,CAAkB,MAAlB,EAA0B,YAAM;AAC/BT,YAAQU,IAAR;AACA,IAFD;AAGAN,iBAAcK,GAAd,CAAkB,aAAlB,EAAiC,YAAM;AACtC,UAAKS,MAAL,CAAYf,IAAZ,EAAkBD,IAAlB,EAAwBkB,aAAxB;AACA,IAFD;AAGAhB,iBAAcK,GAAd,CAAkB,aAAlB,EAAiC,YAAM;AACtC,QAAI,CAACH,UAAUC,IAAf,EAAqB;AACpB,WAAKc,IAAL,CAAU,MAAKH,MAAf;AACAZ,eAAUC,IAAV,GAAiB,IAAjB;AACA,KAHD,MAICD,UAAUC,IAAV,GAAiB,KAAjB;AACD,IAND;AAOAH,iBAAcK,GAAd,CAAkB,IAAlB,EAAwB,YAAM;AAC7Ba,YAAQC,GAAR,SAAkBpB,IAAlB;AACA,QAAGA,OAAO,MAAKe,MAAL,CAAYM,MAAZ,GAAmB,CAA7B,EAAgC;AAC/B,WAAKN,MAAL,CAAYf,IAAZ,EAAkBD,IAAlB,EAAwBuB,gBAAxB;AACAtB,aAAM,CAAN;AACA,WAAKe,MAAL,CAAYf,IAAZ,EAAkBD,IAAlB,EAAwBuB,gBAAxB;AACA;AACD,IAPD;AAQArB,iBAAcK,GAAd,CAAkB,MAAlB,EAA0B,YAAM;AAC/Ba,YAAQC,GAAR,SAAkBpB,IAAlB;AACA,QAAIA,OAAO,CAAX,EAAc;AACb,WAAKe,MAAL,CAAYf,IAAZ,EAAkBD,IAAlB,EAAwBuB,gBAAxB;AACAtB,aAAM,CAAN;AACA,WAAKe,MAAL,CAAYf,IAAZ,EAAkBD,IAAlB,EAAwBuB,gBAAxB;AACA;AACD,IAPD;AAQArB,iBAAcK,GAAd,CAAkB,OAAlB,EAA2B,YAAM;AAChCa,YAAQC,GAAR,SAAkBrB,IAAlB;AACA,QAAIA,OAAO,CAAX,EAAc;AACb,WAAKgB,MAAL,CAAYf,IAAZ,EAAkBD,IAAlB,EAAwBuB,gBAAxB;AACAvB,aAAM,CAAN;AACA,WAAKgB,MAAL,CAAYf,IAAZ,EAAkBD,IAAlB,EAAwBuB,gBAAxB;AACA;AACD,IAPD;AAQArB,iBAAcK,GAAd,CAAkB,MAAlB,EAA0B,YAAM;AAC/Ba,YAAQC,GAAR,SAAkBrB,IAAlB;AACA,QAAIA,OAAO,MAAKgB,MAAL,CAAYM,MAAZ,GAAmB,CAA9B,EAAiC;AAChC,WAAKN,MAAL,CAAYf,IAAZ,EAAkBD,IAAlB,EAAwBuB,gBAAxB;AACAvB,aAAM,CAAN;AACA,WAAKgB,MAAL,CAAYf,IAAZ,EAAkBD,IAAlB,EAAwBuB,gBAAxB;AACA;AACD,IAPD;AAQA;;;yBAEM;AACN,QAAKC,iBAAL;AACA,QAAKV,MAAL,CAAYW,IAAZ,CAAiB,KAAKT,MAAtB;AACA,QAAKD,SAAL,CAAeU,IAAf;AACA,QAAKC,eAAL;AACA;;;sCAEmB;AACnB,QAAKV,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkBO,gBAAlB;AACA;;;gCACcI,QAAQ;AACtBzB,iBAAc0B,GAAd,CAAkBD,MAAlB;AACA;;;uBACIX,QAAQ;AACZI,WAAQC,GAAR,CAAY,KAAKQ,sBAAL,CAA4B,CAA5B,EAA+B,CAA/B,EAAkCb,MAAlC,CAAZ;AACA;;;0BAEO;AAAA;;AACP,QAAKD,SAAL,CAAee,UAAf,CAA0B,KAAKhB,MAA/B;AACA,QAAKG,cAAL,CAAoBc,gBAApB,CAAqC,UAACJ,MAAD,EAAY;AAChD,WAAKK,aAAL,CAAmBL,MAAnB;AACA,WAAKZ,SAAL,CAAee,UAAf,CAA0B,OAAKhB,MAA/B;AACA,IAHD;AAIA;;;yCAEsBmB,WAAWC,WAAWlB,QAAQ;AACpD,OAAImB,UAAU,CAAd;AACA,OAAIC,aAAaH,YAAW,CAA5B;AACA,OAAII,cAAcJ,YAAW,CAA7B;AACA,OAAIK,WAAWJ,YAAW,CAA1B;AACA,OAAIK,aAAaL,YAAW,CAA5B;;AAEA;AACA,QAAK,IAAIM,IAAIJ,UAAb,EAAyBI,IAAIxB,OAAOM,MAAP,GAAc,CAA3C,EAA8CkB,GAA9C,EAAmD;AAClD,QAAIxB,OAAOkB,SAAP,EAAkBM,CAAlB,EAAqBC,OAAzB,EACCN,UADD,KAGC;AACD;AACD;AACA,QAAK,IAAIK,IAAIF,QAAb,EAAuBE,IAAIxB,OAAOM,MAAP,GAAc,CAAzC,EAA4CkB,GAA5C,EAAiD;AAChD,QAAIxB,OAAOwB,CAAP,EAAUA,CAAV,EAAaC,OAAjB,EACCN,UADD,KAGC;AACD;AACD;AACA,QAAK,IAAIK,IAAID,UAAb,EAAyBC,KAAK,CAA9B,EAAiCA,GAAjC,EAAsC;AACrC,QAAIxB,OAAOwB,CAAP,EAAUP,SAAV,EAAqBQ,OAAzB,EACCN,UADD,KAGC;AACD;AACD;AACA,QAAK,IAAIK,IAAIF,QAAb,EAAuBE,IAAIxB,OAAOM,MAAP,GAAc,CAAzC,EAA4CkB,GAA5C,EAAiD;AAChD,QAAIxB,OAAOwB,CAAP,EAAUP,SAAV,EAAqBQ,OAAzB,EACCN,UADD,KAGC;AACD;AACD;AACA,QAAK,IAAIK,IAAIH,WAAb,EAA0BG,KAAK,CAA/B,EAAkCA,GAAlC,EAAuC;AACtC,QAAIxB,OAAOkB,SAAP,EAAkBM,CAAlB,EAAqBC,OAAzB,EACCN,UADD,KAGC;AACD;AACD;AACA,QAAK,IAAIK,IAAIH,WAAb,EAA0BG,KAAK,CAA/B,EAAkCA,GAAlC,EAAuC;AACtC,QAAIxB,OAAOwB,CAAP,EAAUA,CAAV,EAAaC,OAAjB,EACCN,UADD,KAGC;AACD;;AAGD,OAAIO,gBAAgB,EAACC,OAAO,CAAR,EAApB;AACA,QAAKC,mBAAL,CAAyB,CAAzB,EAA2B,CAA3B,EAA8BF,aAA9B,EAA6C1B,MAA7C;AACAI,WAAQC,GAAR,sBAA8BqB,cAAcC,KAAd,GAAoB,CAAlD;AACA,OAAIE,kBAAkB,EAACF,OAAO,CAAR,EAAtB;AACA,QAAKC,mBAAL,CAAyB,CAAzB,EAA2B,CAA3B,EAA8BC,eAA9B,EAA+C7B,MAA/C;AACAI,WAAQC,GAAR,wBAAgCwB,gBAAgBF,KAAhB,GAAsB,CAAtD;AACA,OAAIG,iBAAiB,EAACH,OAAO,CAAR,EAArB;AACA,QAAKI,kBAAL,CAAwB,CAAxB,EAA0B,CAA1B,EAA6BD,cAA7B,EAA6C9B,MAA7C;AACAI,WAAQC,GAAR,uBAA+ByB,eAAeH,KAAf,GAAqB,CAApD;AACA,OAAIK,mBAAmB,EAACL,OAAO,CAAR,EAAvB;AACA,QAAKI,kBAAL,CAAwB,CAAxB,EAA2B,CAA3B,EAA8BC,gBAA9B,EAAgDhC,MAAhD;AACAI,WAAQC,GAAR,yBAAiC2B,iBAAiBL,KAAjB,GAAuB,CAAxD;;AAEA,UAAOR,OAAP;AACA;;;oCAEiBF,WAAWC,WAAWC,SAAUnB,QAAQ;AACzD,OAAIA,OAAOkB,SAAP,EAAkBD,SAAlB,EAA6BQ,OAAjC,EAA0C;AACzCN,YAAQQ,KAAR;AACA;AACD,OAAIT,YAAYlB,OAAOM,MAAP,GAAc,CAA1B,IAA+BW,YAAYjB,OAAOM,MAAP,GAAc,CAA7D,EAAgE;AAC/D,SAAKsB,mBAAL,CAAyBX,YAAU,CAAnC,EAAsCC,YAAU,CAAhD,EAAmDC,OAAnD,EAA4DnB,MAA5D;AACA;AACD;;;sCAEmBiB,WAAWC,WAAWC,SAAUnB,QAAQ;AAC3D,OAAIA,OAAOkB,SAAP,EAAkBD,SAAlB,EAA6BQ,OAAjC,EAA0C;AACzCN,YAAQQ,KAAR;AACA;AACD,OAAIT,YAAY,CAAZ,IAAiBD,YAAYjB,OAAOM,MAAP,GAAc,CAA/C,EAAkD;AACjD,SAAKsB,mBAAL,CAAyBX,YAAU,CAAnC,EAAsCC,YAAU,CAAhD,EAAmDC,OAAnD,EAA4DnB,MAA5D;AACA;AACD;;;qCAEkBiB,WAAWC,WAAWC,SAAUnB,QAAQ;AAC1D,OAAIA,OAAOkB,SAAP,EAAkBD,SAAlB,EAA6BQ,OAAjC,EAA0C;AACzCN,YAAQQ,KAAR;AACA;AACD,OAAIT,YAAYlB,OAAOM,MAAP,GAAc,CAA1B,IAA+BW,YAAY,CAA/C,EAAkD;AACjD,SAAKc,kBAAL,CAAwBd,YAAU,CAAlC,EAAqCC,YAAU,CAA/C,EAAkDC,OAAlD,EAA2DnB,MAA3D;AACA;AACD;;;uCAEoBiB,WAAWC,WAAWC,SAAUnB,QAAQ;AAC5D,OAAIA,OAAOkB,SAAP,EAAkBD,SAAlB,EAA6BQ,OAAjC,EAA0C;AACzCN,YAAQQ,KAAR;AACA;AACD,OAAIT,YAAYlB,OAAOM,MAAP,GAAc,CAA1B,IAA+BW,YAAYjB,OAAOM,MAAP,GAAc,CAA7D,EAAgE;AAC/D,SAAK2B,oBAAL,CAA0BhB,YAAU,CAApC,EAAuCC,YAAU,CAAjD,EAAoDC,OAApD,EAA6DnB,MAA7D;AACA;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;AAEDkC,OAAOC,OAAP,GAAiB1C,IAAjB","file":"Game.js","sourcesContent":["'use strict';\nconst ansi = require('ansi')\n  , cursor = ansi(process.stdout);\n  let posx = 0, posy = 0;\n\nconst _GameCommands = new Map();\n\nlet GameState = {PLAY: false};\n\nconst _GameRules = new Map();\n_GameRules.set('FEWER_THAN_TWO', () => {\n\tprocess.exit();\n});\n\nclass Game {\n\tconstructor(Board, Renderer, Cells, CommandReader) {\n\t\tthis._Board = Board;\n\t\tthis._Renderer = Renderer;\n\t\tthis._Cells = Cells;\n\t\tthis._CommandReader = CommandReader;\n\t}\n\tsetGameCommands() {\n\t\t_GameCommands.set('EXIT', () => {\n\t\t\tprocess.exit();\n\t\t});\n\t\t_GameCommands.set('TOGGLE_LIFE', () => {\n\t\t\tthis._Cells[posy][posx].toggleIsAlive();\n\t\t});\n\t\t_GameCommands.set('TOGGLE_PLAY', () => {\n\t\t\tif (!GameState.PLAY) {\n\t\t\t\tthis.play(this._Cells);\n\t\t\t\tGameState.PLAY = true;\n\t\t\t} else\n\t\t\t\tGameState.PLAY = false;\n\t\t});\n\t\t_GameCommands.set('UP', () => {\n\t\t\tconsole.log(`y: ${posy}`);\n\t\t\tif(posy < this._Cells.length-1) {\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t\tposy+=1;\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t}\n\t\t});\n\t\t_GameCommands.set('DOWN', () => {\n\t\t\tconsole.log(`y: ${posy}`);\n\t\t\tif (posy > 0) {\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t\tposy-=1;\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t}\n\t\t});\n\t\t_GameCommands.set('RIGHT', () => {\n\t\t\tconsole.log(`x: ${posx}`);\n\t\t\tif (posx > 0) {\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t\tposx-=1;\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t}\n\t\t});\n\t\t_GameCommands.set('LEFT', () => {\n\t\t\tconsole.log(`x: ${posx}`);\n\t\t\tif (posx < this._Cells.length-1) {\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t\tposx+=1;\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t}\n\t\t});\n\t}\n\n\tinit() {\n\t\tthis.setInitActiveCell();\n\t\tthis._Board.init(this._Cells);\n\t\tthis._Renderer.init();\n\t\tthis.setGameCommands();\n\t}\n\n\tsetInitActiveCell() {\n\t\tthis._Cells[0][0].toggleIsSelected();\n\t}\n\texecuteAction (action) {\n\t\t_GameCommands.get(action)();\n\t}\n\tplay(_Cells) {\n\t\tconsole.log(this.getCellNeighboursCount(0, 0, _Cells));\n\t}\n\n\tlogic() {\n\t\tthis._Renderer.printBoard(this._Board);\n\t\tthis._CommandReader.getKeyboardInput((action) => {\n\t\t\tthis.executeAction(action);\n\t\t\tthis._Renderer.printBoard(this._Board);\n\t\t});\n\t}\n\n\tgetCellNeighboursCount(positionX, positionY, _Cells) {\n\t\tlet counter = 0;\n\t\tlet leftOrigin = positionX +1;\n\t\tlet rightOrigin = positionX -1;\n\t\tlet upOrigin = positionY +1;\n\t\tlet downOrigin = positionY -1;\n\n\t\t//left evaluation\n\t\tfor (var i = leftOrigin; i < _Cells.length-1; i++) {\n\t\t\tif (_Cells[positionY][i].isAlive)\n\t\t\t\tcounter++;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\t//lefy diagonally up\n\t\tfor (var i = upOrigin; i < _Cells.length-1; i++) {\n\t\t\tif (_Cells[i][i].isAlive)\n\t\t\t\tcounter++;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\t//down\n\t\tfor (var i = downOrigin; i >= 0; i--) {\n\t\t\tif (_Cells[i][positionX].isAlive)\n\t\t\t\tcounter++;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\t\t\n\t\t//up\n\t\tfor (var i = upOrigin; i < _Cells.length-1; i++) {\n\t\t\tif (_Cells[i][positionX].isAlive)\n\t\t\t\tcounter++;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\t\n\t\t//right\t\t\n\t\tfor (var i = rightOrigin; i >= 0; i--) {\n\t\t\tif (_Cells[positionY][i].isAlive)\n\t\t\t\tcounter++;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\t\t\n\t\t//right\tdiagonally down\n\t\tfor (var i = rightOrigin; i >= 0; i--) {\n\t\t\tif (_Cells[i][i].isAlive)\n\t\t\t\tcounter++;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\n\t\t\n\t\tlet leftUpCounter = {count: 0};\n\t\tthis.getDiagonalLeftDown(0,0, leftUpCounter, _Cells);\n\t\tconsole.log(`leftUpCounter: ${leftUpCounter.count-1}`);\n\t\tlet leftDownCounter = {count: 0};\n\t\tthis.getDiagonalLeftDown(0,4, leftDownCounter, _Cells);\n\t\tconsole.log(`leftDownCounter: ${leftDownCounter.count-1}`);\n\t\tlet rightUpCounter = {count: 0};\n\t\tthis.getDiagonalRightUp(4,0, rightUpCounter, _Cells);\n\t\tconsole.log(`rightUpCounter: ${rightUpCounter.count-1}`);\n\t\tlet rightDownCounter = {count: 0};\n\t\tthis.getDiagonalRightUp(2, 2, rightDownCounter, _Cells);\n\t\tconsole.log(`rightDownCounter: ${rightDownCounter.count-1}`);\n\n\t\treturn counter;\n\t}\n\n\tgetDiagonalLeftUp(positionX, positionY, counter , _Cells) {\n\t\tif (_Cells[positionY][positionX].isAlive) {\n\t\t\tcounter.count++;\n\t\t}\n\t\tif (positionY < _Cells.length-1 && positionX < _Cells.length-1) {\n\t\t\tthis.getDiagonalLeftDown(positionX+1, positionY+1, counter, _Cells);\n\t\t}\n\t}\n\n\tgetDiagonalLeftDown(positionX, positionY, counter , _Cells) {\n\t\tif (_Cells[positionY][positionX].isAlive) {\n\t\t\tcounter.count++;\n\t\t}\n\t\tif (positionY > 0 && positionX < _Cells.length-1) {\n\t\t\tthis.getDiagonalLeftDown(positionX+1, positionY-1, counter, _Cells);\n\t\t}\n\t}\n\n\tgetDiagonalRightUp(positionX, positionY, counter , _Cells) {\n\t\tif (_Cells[positionY][positionX].isAlive) {\n\t\t\tcounter.count++;\n\t\t}\n\t\tif (positionY < _Cells.length-1 && positionX > 0) {\n\t\t\tthis.getDiagonalRightUp(positionX-1, positionY+1, counter, _Cells);\n\t\t}\n\t}\n\n\tgetDiagonalRightDown(positionX, positionY, counter , _Cells) {\n\t\tif (_Cells[positionY][positionX].isAlive) {\n\t\t\tcounter.count++;\n\t\t}\n\t\tif (positionY < _Cells.length-1 && positionX < _Cells.length-1) {\n\t\t\tthis.getDiagonalRightDown(positionX+1, positionY+1, counter, _Cells);\n\t\t}\n\t}\n\n\t// getCellNeighboursRecursively(positionX, positionY, counter, _Cells) {\n\t// \tconsole.log(`positionY: ${positionY} positionX: ${positionX}`);\n\t// \tif (_Cells[positionY][positionX].isAlive) {\n\t// \t\tcounter.count+=1;\n\t// \t}\n\t// \tif (positionX-1 >= 0) {\n\t// \t\t//left\n\t// \t\tthis.getCellNeighboursRecursively(positionY, positionX-1, counter, _Cells);\n\t// \t}\n\t// \tif (positionX+1 <= _Cells.length) {\n\t// \t\t//right\n\t// \t\tthis.getCellNeighboursRecursively(positionY, positionX+1, counter, _Cells);\n\t// \t}\n\t// \tif (positionY-1 >=0) {\n\t// \t\t//down\n\t// \t\tthis.getCellNeighboursRecursively(positionY-1, positionX, counter, _Cells);\n\t// \t}\n\t// \tif (positionY+1 <= _Cells.length) {\n\t// \t\t//up\n\t// \t\tthis.getCellNeighboursRecursively(positionY+1, positionX, counter, _Cells);\n\t// \t}\n\t// }\n\n};\n\nmodule.exports = Game;\n"]}