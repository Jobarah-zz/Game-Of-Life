{"version":3,"sources":["Game.js"],"names":["ansi","require","cursor","process","stdout","posx","posy","_GameCommands","Map","GameState","PLAY","_GameRules","set","exit","Game","Board","Renderer","Cells","CommandReader","_Board","_Renderer","_Cells","_CommandReader","toggleIsAlive","cellsArray","limit","length","i","j","neighbours","getCellNeighboursCount","isAlive","console","log","printBoard","sleepFor","toggleIsSelected","setInitActiveCell","init","setGameCommands","action","get","getKeyboardInput","executeAction","positionX","positionY","counter","neighbourCounterRec","count","leftOrigin","rightOrigin","upOrigin","downOrigin","getDiagonalNeighbours","leftDown","leftUp","rightDown","rightUp","getDiagonalLeftUp","getDiagonalLeftDown","getDiagonalRightUp","getDiagonalRightDown","sleepDuration","now","Date","getTime","module","exports"],"mappings":"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","file":"Game.js","sourcesContent":["'use strict';\nconst ansi = require('ansi')\n  , cursor = ansi(process.stdout);\n  let posx = 0, posy = 0;\n\nconst _GameCommands = new Map();\n\nlet GameState = {PLAY: false};\n\nconst _GameRules = new Map();\n_GameRules.set('FEWER_THAN_TWO', () => {\n\tprocess.exit();\n});\n\nclass Game {\n\tconstructor(Board, Renderer, Cells, CommandReader) {\n\t\tthis._Board = Board;\n\t\tthis._Renderer = Renderer;\n\t\tthis._Cells = Cells;\n\t\tthis._CommandReader = CommandReader;\n\t}\n\n\tsetGameCommands() {\n\t\t_GameCommands.set('EXIT', () => {\n\t\t\tprocess.exit();\n\t\t});\n\t\t_GameCommands.set('TOGGLE_LIFE', () => {\n\t\t\tthis._Cells[posy][posx].toggleIsAlive();\n\t\t});\n\t\t_GameCommands.set('TOGGLE_PLAY', () => {\n\t\t\t// if (!GameState.PLAY) {\n\t\t\t// \tGameState.PLAY = true;\n\n\t\t\tlet cellsArray = this._Cells;\n\t\t\tlet limit = cellsArray.length-1;\n\n\t\t\tfor (var i = 0; i < limit; i++) {\n\t\t\t\tfor (var j = 0; j < limit; j++) {\n\t\t\t\t\tlet neighbours = this.getCellNeighboursCount(j, i, this._Cells);\n\t\t\t\t\tif (this._Cells[i][j].isAlive) {\n\t\t\t\t\t\tconsole.log(`this._Cells[0][0] x: ${j} this._Cells[0][0] y: ${i} neighbours: ${neighbours} isAlive: ${this._Cells[i][j].isAlive}`);\n\t\t\t\t\t\tif (neighbours < 2) {\n\t\t\t\t\t\t\tthis._Cells[i][j].isAlive = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (neighbours > 3) {\n\t\t\t\t\t\t\tthis._Cells[i][j].isAlive = false;\n\t\t\t\t\t\t}\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (neighbours === 3) {\n\t\t\t\t\t\t\tthis._Cells[i][j].isAlive = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\t\t\t\n\n\t\t\t\t\tthis._Renderer.printBoard(this._Board);\n\t\t\t\t\tthis.sleepFor(100);\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t\t// console.log(this._Cells[0][0]);\n\n\t\t\t// } else\n\t\t\t// \tGameState.PLAY = false;\n\t\t});\n\t\t_GameCommands.set('UP', () => {\n\t\t\tif(posy < this._Cells.length-1) {\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t\tposy+=1;\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t}\n\t\t});\n\t\t_GameCommands.set('DOWN', () => {\n\t\t\tif (posy > 0) {\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t\tposy-=1;\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t}\n\t\t});\n\t\t_GameCommands.set('RIGHT', () => {\n\t\t\tif (posx > 0) {\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t\tposx-=1;\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t}\n\t\t});\n\t\t_GameCommands.set('LEFT', () => {\n\t\t\tif (posx < this._Cells.length-1) {\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t\tposx+=1;\n\t\t\t\tthis._Cells[posy][posx].toggleIsSelected();\n\t\t\t}\n\t\t});\n\t}\n\n\tinit() {\n\t\tthis.setInitActiveCell();\n\t\tthis._Board.init(this._Cells);\n\t\tthis._Renderer.init();\n\t\tthis.setGameCommands();\n\t}\n\n\tsetInitActiveCell() {\n\t\tthis._Cells[0][0].toggleIsSelected();\n\t}\n\texecuteAction (action) {\n\t\t_GameCommands.get(action)();\n\t}\n\n\tlogic() {\n\t\tthis._Renderer.printBoard(this._Board);\n\t\tthis._CommandReader.getKeyboardInput((action) => {\n\t\t\tthis.executeAction(action);\n\t\t\tthis._Renderer.printBoard(this._Board);\n\t\t});\n\t}\n\n\tgetCellNeighboursCount(positionX, positionY, _Cells) {\n\t\tlet counter = 0;\n\t\tlet neighbourCounterRec = {count: 0};\n\t\tlet leftOrigin = positionX + 1;\n\t\tlet rightOrigin = positionX - 1;\n\t\tlet upOrigin = positionY + 1;\n\t\tlet downOrigin = positionY - 1;\n\n\t\t//left evaluation\n\t\tfor (var i = leftOrigin; i < _Cells.length-1; i++) {\n\t\t\tif (_Cells[positionY][i].isAlive)\n\t\t\t\tcounter++;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\t//down\n\t\tfor (var i = downOrigin; i >= 0; i--) {\n\t\t\tif (_Cells[i][positionX].isAlive)\n\t\t\t\tcounter++;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\t\t\n\t\t//up\n\t\tfor (var i = upOrigin; i < _Cells.length-1; i++) {\n\t\t\tif (_Cells[i][positionX].isAlive)\n\t\t\t\tcounter++;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\t\n\t\t//right\t\t\n\t\tfor (var i = rightOrigin; i >= 0; i--) {\n\t\t\tif (_Cells[positionY][i].isAlive)\n\t\t\t\tcounter++;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\t\t\n\n\t\tthis.getDiagonalNeighbours(positionX, positionY, neighbourCounterRec, _Cells);\n\n\t\treturn counter+neighbourCounterRec.count;\n\t}\n\n\tgetDiagonalNeighbours(positionX, positionY, counter , _Cells) {\n\t\tlet leftOrigin = positionX + 1;\n\t\tlet rightOrigin = positionX - 1;\n\t\tlet upOrigin = positionY + 1;\n\t\tlet downOrigin = positionY - 1;\n\n\t\tlet leftDown = {count: 0};\n\t\tlet leftUp = {count: 0};\n\t\tlet rightDown = {count: 0};\n\t\tlet rightUp = {count: 0};\n\n\t\tif (leftOrigin < _Cells.length-1) {\n\t\t\tif (upOrigin < _Cells.length-1) {\n\t\t\t\tthis.getDiagonalLeftUp(leftOrigin, upOrigin, leftUp, _Cells);\n\t\t\t}\n\t\t\tif (downOrigin >= 0) {\n\t\t\t\tthis.getDiagonalLeftDown(leftOrigin, downOrigin, leftDown, _Cells);\n\t\t\t}\n\t\t}\n\n\t\tif (rightOrigin > 0) {\n\t\t\tif (upOrigin < _Cells.length-1) {\n\t\t\t\tthis.getDiagonalRightUp(rightOrigin, upOrigin, rightUp, _Cells);\n\t\t\t}\n\t\t\tif (downOrigin >= 0) {\n\t\t\t\tthis.getDiagonalRightDown(rightOrigin, downOrigin, rightDown, _Cells);\n\t\t\t}\n\t\t}\n\t\tconsole.log(`leftDown: ${leftDown.count} leftUp: ${leftUp.count} rightDown: ${rightDown.count} rightUp: ${rightUp.count}`);\n\t\tcounter.count += (leftDown.count + leftUp.count + rightDown.count + rightUp.count);\n\t}\n\n\tgetDiagonalLeftUp(positionX, positionY, counter , _Cells) {\n\t\tif (_Cells[positionY][positionX].isAlive) {\n\t\t\tcounter.count++;\n\t\t}\n\t\tif (positionY < _Cells.length-1 && positionX < _Cells.length-1) {\n\t\t\tthis.getDiagonalLeftUp(positionX+1, positionY+1, counter, _Cells);\n\t\t}\n\t}\n\n\tgetDiagonalLeftDown(positionX, positionY, counter , _Cells) {\n\t\tif (_Cells[positionY][positionX].isAlive) {\n\t\t\tcounter.count++;\n\t\t}\n\t\tif (positionY > 0 && positionX < _Cells.length-1) {\n\t\t\tthis.getDiagonalLeftDown(positionX+1, positionY-1, counter, _Cells);\n\t\t}\n\t}\n\n\tgetDiagonalRightUp(positionX, positionY, counter , _Cells) {\n\t\tif (_Cells[positionY][positionX].isAlive) {\n\t\t\tcounter.count++;\n\t\t}\n\t\tif (positionY < _Cells.length-1 && positionX > 0) {\n\t\t\tthis.getDiagonalRightUp(positionX-1, positionY+1, counter, _Cells);\n\t\t}\n\t}\n\n\tgetDiagonalRightDown(positionX, positionY, counter , _Cells) {\n\t\tif (_Cells[positionY][positionX].isAlive) {\n\t\t\tcounter.count++;\n\t\t}\n\t\tif (positionY > 0 && positionX > 0) {\n\t\t\tthis.getDiagonalRightDown(positionX-1, positionY-1, counter, _Cells);\n\t\t}\n\t}\n\n\tsleepFor( sleepDuration ){\n\t    let now = new Date().getTime();\n\t    while(new Date().getTime() < now + sleepDuration){ /* do nothing */ } \n\t}\n};\n\nmodule.exports = Game;\n"]}